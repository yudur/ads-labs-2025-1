#!/bin/bash

echo "üöÄ Iniciando backend do Restaurant App..."

# Fun√ß√£o para executar o seed ap√≥s o servidor estar rodando
run_seed_after_server_start() {
    echo "‚è≥ Aguardando servidor ficar dispon√≠vel..."
    
    # Aguardar o servidor estar respondendo (m√°ximo 60 segundos)
    timeout=60
    count=0
    
    while [ $count -lt $timeout ]; do
        if curl -f http://localhost:3000/health >/dev/null 2>&1; then
            echo "‚úÖ Servidor est√° rodando!"
            break
        fi
        echo "‚è≥ Tentativa $((count + 1))/$timeout - Aguardando servidor..."
        sleep 2
        count=$((count + 2))
    done
    
    if [ $count -ge $timeout ]; then
        echo "‚ùå Timeout: Servidor n√£o ficou dispon√≠vel em $timeout segundos"
        return 1
    fi
    
    # Aguardar mais 5 segundos para garantir que o banco est√° conectado
    echo "‚è≥ Aguardando conex√£o com banco de dados..."
    sleep 5
    
    # Executar o seed
    echo "üå± Executando seed do banco de dados..."
    npm run seed:mock
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Seed executado com sucesso!"
    else
        echo "‚ùå Erro ao executar seed"
    fi
}

# Iniciar o servidor em background
echo "üîß Iniciando servidor Node.js..."
npm run dev &

# Capturar o PID do processo do servidor
SERVER_PID=$!

# Executar seed em background ap√≥s o servidor iniciar
run_seed_after_server_start &

# Aguardar o processo do servidor (mant√©m o container rodando)
wait $SERVER_PID
